$date
	Sun Jan 21 10:29:09 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var reg 1 ! areset $end
$var reg 1 " clk $end
$scope module CPU $end
$var wire 32 # alu_in1 [31:0] $end
$var wire 1 ! areset $end
$var wire 1 " clk $end
$var wire 32 $ dm_data [31:0] $end
$var wire 4 % im_read_addr [3:0] $end
$var wire 32 & rf_write_data [31:0] $end
$var wire 5 ' rf_write_addr [4:0] $end
$var wire 32 ( rf_read_data2 [31:0] $end
$var wire 32 ) rf_read_data1 [31:0] $end
$var wire 5 * rf_read_addr2 [4:0] $end
$var wire 5 + rf_read_addr1 [4:0] $end
$var wire 32 , inst [31:0] $end
$var wire 32 - imm_sign_ex [31:0] $end
$var wire 32 . dm_output [31:0] $end
$var wire 4 / dm_addr [3:0] $end
$var wire 1 0 alu_zero_flag $end
$var wire 32 1 alu_result [31:0] $end
$var wire 32 2 alu_in2 [31:0] $end
$var reg 2 3 ALUOp_ctrl [1:0] $end
$var reg 1 4 ALUSrc_mux $end
$var reg 1 5 Branch_ctrl $end
$var reg 1 6 MemRead_ctrl $end
$var reg 1 7 MemWrite_ctrl $end
$var reg 1 8 MemtoReg_mux $end
$var reg 4 9 PC_branch [3:0] $end
$var reg 4 : PC_rtmp [3:0] $end
$var reg 4 ; Program_Counter [3:0] $end
$var reg 1 < RegDst_mux $end
$var reg 1 = RegWrite_ctrl $end
$var reg 32 > wb_data [31:0] $end
$scope module Data_Memory $end
$var wire 4 ? byte_addr [3:0] $end
$var wire 32 @ data_i [31:0] $end
$var wire 1 6 e_read $end
$var wire 1 7 e_write $end
$var wire 4 A start_addr [3:0] $end
$var reg 32 B out [31:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 4 C byte_addr [3:0] $end
$var wire 4 D start_addr [3:0] $end
$var reg 32 E out [31:0] $end
$upscope $end
$scope module RF $end
$var wire 1 = e_write $end
$var wire 5 F read_addr1 [4:0] $end
$var wire 5 G read_addr2 [4:0] $end
$var wire 5 H write_addr [4:0] $end
$var wire 32 I write_data [31:0] $end
$var reg 32 J read_d1 [31:0] $end
$var reg 32 K read_d2 [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 L i [31:0] $end
$upscope $end
$upscope $end
$scope module alu $end
$var wire 32 M A [31:0] $end
$var wire 32 N B [31:0] $end
$var wire 1 O Cin $end
$var wire 2 P opcode [1:0] $end
$var wire 1 0 zero_f $end
$var wire 1 Q zero_f1 $end
$var wire 1 R zero_f0 $end
$var wire 32 S result [31:0] $end
$var wire 1 T Cout $end
$var wire 1 U C $end
$scope module A0 $end
$var wire 16 V A [15:0] $end
$var wire 16 W B [15:0] $end
$var wire 1 O Cin $end
$var wire 2 X opcode [1:0] $end
$var wire 1 R zero_f $end
$var wire 1 Y zero_f9 $end
$var wire 1 Z zero_f8 $end
$var wire 1 [ zero_f7 $end
$var wire 1 \ zero_f6 $end
$var wire 1 ] zero_f5 $end
$var wire 1 ^ zero_f4 $end
$var wire 1 _ zero_f3 $end
$var wire 1 ` zero_f2 $end
$var wire 1 a zero_f15 $end
$var wire 1 b zero_f14 $end
$var wire 1 c zero_f13 $end
$var wire 1 d zero_f12 $end
$var wire 1 e zero_f11 $end
$var wire 1 f zero_f10 $end
$var wire 1 g zero_f1 $end
$var wire 1 h zero_f0 $end
$var wire 16 i result [15:0] $end
$var wire 1 U Cout $end
$var wire 1 j C9 $end
$var wire 1 k C8 $end
$var wire 1 l C7 $end
$var wire 1 m C6 $end
$var wire 1 n C5 $end
$var wire 1 o C4 $end
$var wire 1 p C3 $end
$var wire 1 q C2 $end
$var wire 1 r C14 $end
$var wire 1 s C13 $end
$var wire 1 t C12 $end
$var wire 1 u C11 $end
$var wire 1 v C10 $end
$var wire 1 w C1 $end
$var wire 1 x C0 $end
$scope module A0 $end
$var wire 1 y A $end
$var wire 1 z B $end
$var wire 1 O Cin $end
$var wire 2 { opcode [1:0] $end
$var wire 1 h zero_f $end
$var wire 1 | addition_rst $end
$var wire 1 } addition_cout $end
$var reg 1 x Cout $end
$var reg 1 ~ result $end
$scope module ADD $end
$var wire 1 y A $end
$var wire 1 z B $end
$var wire 1 O Cin $end
$var wire 1 } Cout $end
$var wire 1 | Sum $end
$upscope $end
$upscope $end
$scope module A1 $end
$var wire 1 !" A $end
$var wire 1 "" B $end
$var wire 1 x Cin $end
$var wire 2 #" opcode [1:0] $end
$var wire 1 g zero_f $end
$var wire 1 $" addition_rst $end
$var wire 1 %" addition_cout $end
$var reg 1 w Cout $end
$var reg 1 &" result $end
$scope module ADD $end
$var wire 1 !" A $end
$var wire 1 "" B $end
$var wire 1 x Cin $end
$var wire 1 %" Cout $end
$var wire 1 $" Sum $end
$upscope $end
$upscope $end
$scope module A10 $end
$var wire 1 '" A $end
$var wire 1 (" B $end
$var wire 2 )" opcode [1:0] $end
$var wire 1 f zero_f $end
$var wire 1 *" addition_rst $end
$var wire 1 +" addition_cout $end
$var wire 1 j Cin $end
$var reg 1 v Cout $end
$var reg 1 ," result $end
$scope module ADD $end
$var wire 1 '" A $end
$var wire 1 (" B $end
$var wire 1 +" Cout $end
$var wire 1 *" Sum $end
$var wire 1 j Cin $end
$upscope $end
$upscope $end
$scope module A11 $end
$var wire 1 -" A $end
$var wire 1 ." B $end
$var wire 1 v Cin $end
$var wire 2 /" opcode [1:0] $end
$var wire 1 e zero_f $end
$var wire 1 0" addition_rst $end
$var wire 1 1" addition_cout $end
$var reg 1 u Cout $end
$var reg 1 2" result $end
$scope module ADD $end
$var wire 1 -" A $end
$var wire 1 ." B $end
$var wire 1 v Cin $end
$var wire 1 1" Cout $end
$var wire 1 0" Sum $end
$upscope $end
$upscope $end
$scope module A12 $end
$var wire 1 3" A $end
$var wire 1 4" B $end
$var wire 1 u Cin $end
$var wire 2 5" opcode [1:0] $end
$var wire 1 d zero_f $end
$var wire 1 6" addition_rst $end
$var wire 1 7" addition_cout $end
$var reg 1 t Cout $end
$var reg 1 8" result $end
$scope module ADD $end
$var wire 1 3" A $end
$var wire 1 4" B $end
$var wire 1 u Cin $end
$var wire 1 7" Cout $end
$var wire 1 6" Sum $end
$upscope $end
$upscope $end
$scope module A13 $end
$var wire 1 9" A $end
$var wire 1 :" B $end
$var wire 1 t Cin $end
$var wire 2 ;" opcode [1:0] $end
$var wire 1 c zero_f $end
$var wire 1 <" addition_rst $end
$var wire 1 =" addition_cout $end
$var reg 1 s Cout $end
$var reg 1 >" result $end
$scope module ADD $end
$var wire 1 9" A $end
$var wire 1 :" B $end
$var wire 1 t Cin $end
$var wire 1 =" Cout $end
$var wire 1 <" Sum $end
$upscope $end
$upscope $end
$scope module A14 $end
$var wire 1 ?" A $end
$var wire 1 @" B $end
$var wire 1 s Cin $end
$var wire 2 A" opcode [1:0] $end
$var wire 1 b zero_f $end
$var wire 1 B" addition_rst $end
$var wire 1 C" addition_cout $end
$var reg 1 r Cout $end
$var reg 1 D" result $end
$scope module ADD $end
$var wire 1 ?" A $end
$var wire 1 @" B $end
$var wire 1 s Cin $end
$var wire 1 C" Cout $end
$var wire 1 B" Sum $end
$upscope $end
$upscope $end
$scope module A15 $end
$var wire 1 E" A $end
$var wire 1 F" B $end
$var wire 1 r Cin $end
$var wire 2 G" opcode [1:0] $end
$var wire 1 a zero_f $end
$var wire 1 H" addition_rst $end
$var wire 1 I" addition_cout $end
$var reg 1 U Cout $end
$var reg 1 J" result $end
$scope module ADD $end
$var wire 1 E" A $end
$var wire 1 F" B $end
$var wire 1 r Cin $end
$var wire 1 I" Cout $end
$var wire 1 H" Sum $end
$upscope $end
$upscope $end
$scope module A2 $end
$var wire 1 K" A $end
$var wire 1 L" B $end
$var wire 1 w Cin $end
$var wire 2 M" opcode [1:0] $end
$var wire 1 ` zero_f $end
$var wire 1 N" addition_rst $end
$var wire 1 O" addition_cout $end
$var reg 1 q Cout $end
$var reg 1 P" result $end
$scope module ADD $end
$var wire 1 K" A $end
$var wire 1 L" B $end
$var wire 1 w Cin $end
$var wire 1 O" Cout $end
$var wire 1 N" Sum $end
$upscope $end
$upscope $end
$scope module A3 $end
$var wire 1 Q" A $end
$var wire 1 R" B $end
$var wire 1 q Cin $end
$var wire 2 S" opcode [1:0] $end
$var wire 1 _ zero_f $end
$var wire 1 T" addition_rst $end
$var wire 1 U" addition_cout $end
$var reg 1 p Cout $end
$var reg 1 V" result $end
$scope module ADD $end
$var wire 1 Q" A $end
$var wire 1 R" B $end
$var wire 1 q Cin $end
$var wire 1 U" Cout $end
$var wire 1 T" Sum $end
$upscope $end
$upscope $end
$scope module A4 $end
$var wire 1 W" A $end
$var wire 1 X" B $end
$var wire 1 p Cin $end
$var wire 2 Y" opcode [1:0] $end
$var wire 1 ^ zero_f $end
$var wire 1 Z" addition_rst $end
$var wire 1 [" addition_cout $end
$var reg 1 o Cout $end
$var reg 1 \" result $end
$scope module ADD $end
$var wire 1 W" A $end
$var wire 1 X" B $end
$var wire 1 p Cin $end
$var wire 1 [" Cout $end
$var wire 1 Z" Sum $end
$upscope $end
$upscope $end
$scope module A5 $end
$var wire 1 ]" A $end
$var wire 1 ^" B $end
$var wire 1 o Cin $end
$var wire 2 _" opcode [1:0] $end
$var wire 1 ] zero_f $end
$var wire 1 `" addition_rst $end
$var wire 1 a" addition_cout $end
$var reg 1 n Cout $end
$var reg 1 b" result $end
$scope module ADD $end
$var wire 1 ]" A $end
$var wire 1 ^" B $end
$var wire 1 o Cin $end
$var wire 1 a" Cout $end
$var wire 1 `" Sum $end
$upscope $end
$upscope $end
$scope module A6 $end
$var wire 1 c" A $end
$var wire 1 d" B $end
$var wire 1 n Cin $end
$var wire 2 e" opcode [1:0] $end
$var wire 1 \ zero_f $end
$var wire 1 f" addition_rst $end
$var wire 1 g" addition_cout $end
$var reg 1 m Cout $end
$var reg 1 h" result $end
$scope module ADD $end
$var wire 1 c" A $end
$var wire 1 d" B $end
$var wire 1 n Cin $end
$var wire 1 g" Cout $end
$var wire 1 f" Sum $end
$upscope $end
$upscope $end
$scope module A7 $end
$var wire 1 i" A $end
$var wire 1 j" B $end
$var wire 1 m Cin $end
$var wire 2 k" opcode [1:0] $end
$var wire 1 [ zero_f $end
$var wire 1 l" addition_rst $end
$var wire 1 m" addition_cout $end
$var reg 1 l Cout $end
$var reg 1 n" result $end
$scope module ADD $end
$var wire 1 i" A $end
$var wire 1 j" B $end
$var wire 1 m Cin $end
$var wire 1 m" Cout $end
$var wire 1 l" Sum $end
$upscope $end
$upscope $end
$scope module A8 $end
$var wire 1 o" A $end
$var wire 1 p" B $end
$var wire 1 l Cin $end
$var wire 2 q" opcode [1:0] $end
$var wire 1 Z zero_f $end
$var wire 1 r" addition_rst $end
$var wire 1 s" addition_cout $end
$var reg 1 k Cout $end
$var reg 1 t" result $end
$scope module ADD $end
$var wire 1 o" A $end
$var wire 1 p" B $end
$var wire 1 l Cin $end
$var wire 1 s" Cout $end
$var wire 1 r" Sum $end
$upscope $end
$upscope $end
$scope module A9 $end
$var wire 1 u" A $end
$var wire 1 v" B $end
$var wire 1 k Cin $end
$var wire 2 w" opcode [1:0] $end
$var wire 1 Y zero_f $end
$var wire 1 x" addition_rst $end
$var wire 1 y" addition_cout $end
$var reg 1 j Cout $end
$var reg 1 z" result $end
$scope module ADD $end
$var wire 1 u" A $end
$var wire 1 v" B $end
$var wire 1 k Cin $end
$var wire 1 y" Cout $end
$var wire 1 x" Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module A1 $end
$var wire 16 {" A [15:0] $end
$var wire 16 |" B [15:0] $end
$var wire 1 U Cin $end
$var wire 2 }" opcode [1:0] $end
$var wire 1 Q zero_f $end
$var wire 1 ~" zero_f9 $end
$var wire 1 !# zero_f8 $end
$var wire 1 "# zero_f7 $end
$var wire 1 ## zero_f6 $end
$var wire 1 $# zero_f5 $end
$var wire 1 %# zero_f4 $end
$var wire 1 &# zero_f3 $end
$var wire 1 '# zero_f2 $end
$var wire 1 (# zero_f15 $end
$var wire 1 )# zero_f14 $end
$var wire 1 *# zero_f13 $end
$var wire 1 +# zero_f12 $end
$var wire 1 ,# zero_f11 $end
$var wire 1 -# zero_f10 $end
$var wire 1 .# zero_f1 $end
$var wire 1 /# zero_f0 $end
$var wire 16 0# result [15:0] $end
$var wire 1 T Cout $end
$var wire 1 1# C9 $end
$var wire 1 2# C8 $end
$var wire 1 3# C7 $end
$var wire 1 4# C6 $end
$var wire 1 5# C5 $end
$var wire 1 6# C4 $end
$var wire 1 7# C3 $end
$var wire 1 8# C2 $end
$var wire 1 9# C14 $end
$var wire 1 :# C13 $end
$var wire 1 ;# C12 $end
$var wire 1 <# C11 $end
$var wire 1 =# C10 $end
$var wire 1 ># C1 $end
$var wire 1 ?# C0 $end
$scope module A0 $end
$var wire 1 @# A $end
$var wire 1 A# B $end
$var wire 1 U Cin $end
$var wire 2 B# opcode [1:0] $end
$var wire 1 /# zero_f $end
$var wire 1 C# addition_rst $end
$var wire 1 D# addition_cout $end
$var reg 1 ?# Cout $end
$var reg 1 E# result $end
$scope module ADD $end
$var wire 1 @# A $end
$var wire 1 A# B $end
$var wire 1 U Cin $end
$var wire 1 D# Cout $end
$var wire 1 C# Sum $end
$upscope $end
$upscope $end
$scope module A1 $end
$var wire 1 F# A $end
$var wire 1 G# B $end
$var wire 1 ?# Cin $end
$var wire 2 H# opcode [1:0] $end
$var wire 1 .# zero_f $end
$var wire 1 I# addition_rst $end
$var wire 1 J# addition_cout $end
$var reg 1 ># Cout $end
$var reg 1 K# result $end
$scope module ADD $end
$var wire 1 F# A $end
$var wire 1 G# B $end
$var wire 1 ?# Cin $end
$var wire 1 J# Cout $end
$var wire 1 I# Sum $end
$upscope $end
$upscope $end
$scope module A10 $end
$var wire 1 L# A $end
$var wire 1 M# B $end
$var wire 2 N# opcode [1:0] $end
$var wire 1 -# zero_f $end
$var wire 1 O# addition_rst $end
$var wire 1 P# addition_cout $end
$var wire 1 1# Cin $end
$var reg 1 =# Cout $end
$var reg 1 Q# result $end
$scope module ADD $end
$var wire 1 L# A $end
$var wire 1 M# B $end
$var wire 1 P# Cout $end
$var wire 1 O# Sum $end
$var wire 1 1# Cin $end
$upscope $end
$upscope $end
$scope module A11 $end
$var wire 1 R# A $end
$var wire 1 S# B $end
$var wire 1 =# Cin $end
$var wire 2 T# opcode [1:0] $end
$var wire 1 ,# zero_f $end
$var wire 1 U# addition_rst $end
$var wire 1 V# addition_cout $end
$var reg 1 <# Cout $end
$var reg 1 W# result $end
$scope module ADD $end
$var wire 1 R# A $end
$var wire 1 S# B $end
$var wire 1 =# Cin $end
$var wire 1 V# Cout $end
$var wire 1 U# Sum $end
$upscope $end
$upscope $end
$scope module A12 $end
$var wire 1 X# A $end
$var wire 1 Y# B $end
$var wire 1 <# Cin $end
$var wire 2 Z# opcode [1:0] $end
$var wire 1 +# zero_f $end
$var wire 1 [# addition_rst $end
$var wire 1 \# addition_cout $end
$var reg 1 ;# Cout $end
$var reg 1 ]# result $end
$scope module ADD $end
$var wire 1 X# A $end
$var wire 1 Y# B $end
$var wire 1 <# Cin $end
$var wire 1 \# Cout $end
$var wire 1 [# Sum $end
$upscope $end
$upscope $end
$scope module A13 $end
$var wire 1 ^# A $end
$var wire 1 _# B $end
$var wire 1 ;# Cin $end
$var wire 2 `# opcode [1:0] $end
$var wire 1 *# zero_f $end
$var wire 1 a# addition_rst $end
$var wire 1 b# addition_cout $end
$var reg 1 :# Cout $end
$var reg 1 c# result $end
$scope module ADD $end
$var wire 1 ^# A $end
$var wire 1 _# B $end
$var wire 1 ;# Cin $end
$var wire 1 b# Cout $end
$var wire 1 a# Sum $end
$upscope $end
$upscope $end
$scope module A14 $end
$var wire 1 d# A $end
$var wire 1 e# B $end
$var wire 1 :# Cin $end
$var wire 2 f# opcode [1:0] $end
$var wire 1 )# zero_f $end
$var wire 1 g# addition_rst $end
$var wire 1 h# addition_cout $end
$var reg 1 9# Cout $end
$var reg 1 i# result $end
$scope module ADD $end
$var wire 1 d# A $end
$var wire 1 e# B $end
$var wire 1 :# Cin $end
$var wire 1 h# Cout $end
$var wire 1 g# Sum $end
$upscope $end
$upscope $end
$scope module A15 $end
$var wire 1 j# A $end
$var wire 1 k# B $end
$var wire 1 9# Cin $end
$var wire 2 l# opcode [1:0] $end
$var wire 1 (# zero_f $end
$var wire 1 m# addition_rst $end
$var wire 1 n# addition_cout $end
$var reg 1 T Cout $end
$var reg 1 o# result $end
$scope module ADD $end
$var wire 1 j# A $end
$var wire 1 k# B $end
$var wire 1 9# Cin $end
$var wire 1 n# Cout $end
$var wire 1 m# Sum $end
$upscope $end
$upscope $end
$scope module A2 $end
$var wire 1 p# A $end
$var wire 1 q# B $end
$var wire 1 ># Cin $end
$var wire 2 r# opcode [1:0] $end
$var wire 1 '# zero_f $end
$var wire 1 s# addition_rst $end
$var wire 1 t# addition_cout $end
$var reg 1 8# Cout $end
$var reg 1 u# result $end
$scope module ADD $end
$var wire 1 p# A $end
$var wire 1 q# B $end
$var wire 1 ># Cin $end
$var wire 1 t# Cout $end
$var wire 1 s# Sum $end
$upscope $end
$upscope $end
$scope module A3 $end
$var wire 1 v# A $end
$var wire 1 w# B $end
$var wire 1 8# Cin $end
$var wire 2 x# opcode [1:0] $end
$var wire 1 &# zero_f $end
$var wire 1 y# addition_rst $end
$var wire 1 z# addition_cout $end
$var reg 1 7# Cout $end
$var reg 1 {# result $end
$scope module ADD $end
$var wire 1 v# A $end
$var wire 1 w# B $end
$var wire 1 8# Cin $end
$var wire 1 z# Cout $end
$var wire 1 y# Sum $end
$upscope $end
$upscope $end
$scope module A4 $end
$var wire 1 |# A $end
$var wire 1 }# B $end
$var wire 1 7# Cin $end
$var wire 2 ~# opcode [1:0] $end
$var wire 1 %# zero_f $end
$var wire 1 !$ addition_rst $end
$var wire 1 "$ addition_cout $end
$var reg 1 6# Cout $end
$var reg 1 #$ result $end
$scope module ADD $end
$var wire 1 |# A $end
$var wire 1 }# B $end
$var wire 1 7# Cin $end
$var wire 1 "$ Cout $end
$var wire 1 !$ Sum $end
$upscope $end
$upscope $end
$scope module A5 $end
$var wire 1 $$ A $end
$var wire 1 %$ B $end
$var wire 1 6# Cin $end
$var wire 2 &$ opcode [1:0] $end
$var wire 1 $# zero_f $end
$var wire 1 '$ addition_rst $end
$var wire 1 ($ addition_cout $end
$var reg 1 5# Cout $end
$var reg 1 )$ result $end
$scope module ADD $end
$var wire 1 $$ A $end
$var wire 1 %$ B $end
$var wire 1 6# Cin $end
$var wire 1 ($ Cout $end
$var wire 1 '$ Sum $end
$upscope $end
$upscope $end
$scope module A6 $end
$var wire 1 *$ A $end
$var wire 1 +$ B $end
$var wire 1 5# Cin $end
$var wire 2 ,$ opcode [1:0] $end
$var wire 1 ## zero_f $end
$var wire 1 -$ addition_rst $end
$var wire 1 .$ addition_cout $end
$var reg 1 4# Cout $end
$var reg 1 /$ result $end
$scope module ADD $end
$var wire 1 *$ A $end
$var wire 1 +$ B $end
$var wire 1 5# Cin $end
$var wire 1 .$ Cout $end
$var wire 1 -$ Sum $end
$upscope $end
$upscope $end
$scope module A7 $end
$var wire 1 0$ A $end
$var wire 1 1$ B $end
$var wire 1 4# Cin $end
$var wire 2 2$ opcode [1:0] $end
$var wire 1 "# zero_f $end
$var wire 1 3$ addition_rst $end
$var wire 1 4$ addition_cout $end
$var reg 1 3# Cout $end
$var reg 1 5$ result $end
$scope module ADD $end
$var wire 1 0$ A $end
$var wire 1 1$ B $end
$var wire 1 4# Cin $end
$var wire 1 4$ Cout $end
$var wire 1 3$ Sum $end
$upscope $end
$upscope $end
$scope module A8 $end
$var wire 1 6$ A $end
$var wire 1 7$ B $end
$var wire 1 3# Cin $end
$var wire 2 8$ opcode [1:0] $end
$var wire 1 !# zero_f $end
$var wire 1 9$ addition_rst $end
$var wire 1 :$ addition_cout $end
$var reg 1 2# Cout $end
$var reg 1 ;$ result $end
$scope module ADD $end
$var wire 1 6$ A $end
$var wire 1 7$ B $end
$var wire 1 3# Cin $end
$var wire 1 :$ Cout $end
$var wire 1 9$ Sum $end
$upscope $end
$upscope $end
$scope module A9 $end
$var wire 1 <$ A $end
$var wire 1 =$ B $end
$var wire 1 2# Cin $end
$var wire 2 >$ opcode [1:0] $end
$var wire 1 ~" zero_f $end
$var wire 1 ?$ addition_rst $end
$var wire 1 @$ addition_cout $end
$var reg 1 1# Cout $end
$var reg 1 A$ result $end
$scope module ADD $end
$var wire 1 <$ A $end
$var wire 1 =$ B $end
$var wire 1 2# Cin $end
$var wire 1 @$ Cout $end
$var wire 1 ?$ Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xA$
x@$
x?$
bx >$
x=$
x<$
x;$
x:$
x9$
bx 8$
x7$
x6$
x5$
x4$
x3$
bx 2$
x1$
x0$
x/$
x.$
x-$
bx ,$
x+$
x*$
x)$
x($
x'$
bx &$
x%$
x$$
x#$
x"$
x!$
bx ~#
x}#
x|#
x{#
xz#
xy#
bx x#
xw#
xv#
xu#
xt#
xs#
bx r#
xq#
xp#
xo#
xn#
xm#
bx l#
xk#
xj#
xi#
xh#
xg#
bx f#
xe#
xd#
xc#
xb#
xa#
bx `#
x_#
x^#
x]#
x\#
x[#
bx Z#
xY#
xX#
xW#
xV#
xU#
bx T#
xS#
xR#
xQ#
xP#
xO#
bx N#
xM#
xL#
xK#
xJ#
xI#
bx H#
xG#
xF#
xE#
xD#
xC#
bx B#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
bx 0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
bx }"
bx |"
bx {"
xz"
xy"
xx"
bx w"
xv"
xu"
xt"
xs"
xr"
bx q"
xp"
xo"
xn"
xm"
xl"
bx k"
xj"
xi"
xh"
xg"
xf"
bx e"
xd"
xc"
xb"
xa"
x`"
bx _"
x^"
x]"
x\"
x["
xZ"
bx Y"
xX"
xW"
xV"
xU"
xT"
bx S"
xR"
xQ"
xP"
xO"
xN"
bx M"
xL"
xK"
xJ"
xI"
xH"
bx G"
xF"
xE"
xD"
xC"
xB"
bx A"
x@"
x?"
x>"
x="
x<"
bx ;"
x:"
x9"
x8"
x7"
x6"
bx 5"
x4"
x3"
x2"
x1"
x0"
bx /"
x."
x-"
x,"
x+"
x*"
bx )"
x("
x'"
x&"
x%"
x$"
bx #"
x""
x!"
x~
x}
x|
bx {
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
bx i
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
bx X
bx W
bx V
xU
xT
bx S
xR
xQ
bx P
0O
bx N
bx M
b1010 L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx00 D
bx C
b0 B
bx00 A
bx @
bx ?
bx >
x=
x<
bx ;
bx :
bx 9
x8
x7
x6
x5
x4
bx 3
bx 2
bx 1
x0
bx /
b0 .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
0"
0!
$end
#1
10
1R
1Q
0}
1%"
b0 A
0O"
0U"
0["
0a"
0g"
0m"
0s"
0y"
0+"
01"
07"
0="
0C"
0I"
0D#
0J#
0t#
0z#
0"$
0($
0.$
04$
0:$
0@$
0P#
0V#
0\#
0b#
0h#
0n#
0|
1h
1g
1`
1_
b0 /
b0 ?
1^
1]
1\
1[
1Z
1Y
1f
1e
1d
1c
1b
1a
1/#
1.#
1'#
1&#
1%#
1$#
1##
1"#
1!#
1~"
1-#
1,#
1+#
1*#
1)#
1(#
0~
0&"
0P"
0V"
0\"
0b"
0h"
0n"
0t"
0z"
0,"
02"
08"
0>"
0D"
b0 i
0J"
0E#
0K#
0u#
0{#
0#$
0)$
0/$
05$
0;$
0A$
0Q#
0W#
0]#
0c#
0i#
b0 1
b0 S
b0 0#
0o#
0z
1""
0L"
0R"
0X"
0^"
0d"
0j"
0p"
0v"
0("
0."
04"
0:"
0@"
0F"
0A#
0G#
0q#
0w#
0}#
0%$
0+$
01$
07$
0=$
0M#
0S#
0Y#
0_#
0e#
0k#
0y
1!"
0K"
0Q"
0W"
0]"
0c"
0i"
0o"
0u"
0'"
0-"
03"
09"
0?"
0E"
0@#
0F#
0p#
0v#
0|#
0$$
0*$
00$
06$
0<$
0L#
0R#
0X#
0^#
0d#
0j#
b10 W
b0 |"
b10 V
b0 {"
b10 2
b10 N
b0x '
b0x H
b10 $
b10 @
b10 (
b10 K
b10 #
b10 M
b10 )
b10 J
b1 +
b1 F
b1000 -
b1 *
b1 G
15
b11 3
b11 P
b11 X
b11 {
b11 #"
b11 )"
b11 /"
b11 5"
b11 ;"
b11 A"
b11 G"
b11 M"
b11 S"
b11 Y"
b11 _"
b11 e"
b11 k"
b11 q"
b11 w"
b11 }"
b11 B#
b11 H#
b11 N#
b11 T#
b11 Z#
b11 `#
b11 f#
b11 l#
b11 r#
b11 x#
b11 ~#
b11 &$
b11 ,$
b11 2$
b11 8$
b11 >$
04
b10000001000010000000000001000 ,
b10000001000010000000000001000 E
b1010 L
b1100 D
b0 &
b0 I
b0 >
06
07
0=
b1100 :
b1100 %
b1100 ;
b1100 C
1!
#3
00
0R
x%"
b100 A
0g
xO"
0`
1|
0h
b111 /
b111 ?
b111 &
b111 I
b111 >
1&"
1P"
b111 1
b111 S
b111 i
1~
0""
1L"
1y
b100 W
b1010 L
b11 V
b100 2
b100 N
b0x00 '
b0x00 H
b100 $
b100 @
b100 (
b100 K
b11 #
b11 M
b11 )
b11 J
b11 +
b11 F
b100 -
b100 *
b100 G
05
17
14
b10101100011001000000000000000100 ,
b10101100011001000000000000000100 E
b100 D
b100 %
b100 ;
b100 C
b100 9
b0 :
1"
#5
0"
#7
b110 '
b110 H
b100 $
b100 @
b100 (
b100 K
b100 .
b100 B
b1010 L
b100 &
b100 I
b100 >
b110 *
b110 G
07
16
1=
18
0<
b10001100011001100000000000000100 ,
b10001100011001100000000000000100 E
b1000 D
b1000 %
b1000 ;
b1000 C
b1000 9
b1000 :
1"
#9
0"
#11
10
1R
1%"
b0 A
1g
0O"
1`
0|
1h
b0 /
b0 ?
0&"
0P"
b0 1
b0 S
b0 i
0~
1""
0L"
0y
b10 W
b10 V
b0 &
b0 I
b0 >
b10 2
b10 N
b1 '
b1 H
b10 $
b10 @
b10 (
b10 K
b10 #
b10 M
b10 )
b10 J
b1 +
b1 F
b0 .
b0 B
b1010 L
b1000 -
b1 *
b1 G
15
06
0=
04
b10000001000010000000000001000 ,
b10000001000010000000000001000 E
b1100 D
b1100 %
b1100 ;
b1100 C
b1100 9
b1100 :
1"
#13
0"
#15
00
0R
x%"
b100 A
0g
xO"
0`
1|
0h
b111 /
b111 ?
1&"
1P"
b111 1
b111 S
b111 i
1~
0""
1L"
1y
b100 W
b1010 L
b11 V
b100 2
b100 N
b100 '
b100 H
b100 $
b100 @
b100 (
b100 K
b11 #
b11 M
b11 )
b11 J
b11 +
b11 F
b100 -
b100 *
b100 G
05
17
14
b10101100011001000000000000000100 ,
b10101100011001000000000000000100 E
b100 D
b100 %
b100 ;
b100 C
b100 9
b0 :
1"
#17
0"
#19
b100 &
b100 I
b100 >
b110 '
b110 H
b100 .
b100 B
b1010 L
b110 *
b110 G
07
16
1=
b10001100011001100000000000000100 ,
b10001100011001100000000000000100 E
b1000 D
b1000 %
b1000 ;
b1000 C
b1000 9
b1000 :
1"
#21
0"
#26
